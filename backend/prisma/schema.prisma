// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  userType  UserType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hospital Hospital?
  doctor   Doctor?

  @@map("users")
}

enum UserType {
  HOSPITAL
  DOCTOR
}

model Hospital {
  userId  String @id
  name    String
  address String
  phone   String

  user    User     @relation(fields: [userId], references: [id])
  doctors Doctor[] @relation("HospitalDoctors")
  Job     Job[]

  @@map("hospitals")
}

model Doctor {
  userId String @id
  name   String
  crm    String @unique
  phone  String

  user         User              @relation(fields: [userId], references: [id])
  hospitals    Hospital[]        @relation("HospitalDoctors")
  specialties  DoctorSpecialty[]
  applications Application[]

  @@map("doctors")
}

model Specialty {
  id      String            @id @default(uuid())
  name    String            @unique
  doctors DoctorSpecialty[]
  jobs    JobSpecialty[]

  @@map("specialties")
}

model DoctorSpecialty {
  doctorId    String
  specialtyId String

  doctor    Doctor    @relation(fields: [doctorId], references: [userId])
  specialty Specialty @relation(fields: [specialtyId], references: [id])

  @@id([doctorId, specialtyId])
  @@map("doctor_specialties")
}

model Job {
  id          String    @id @default(uuid())
  hospitalId  String
  title       String
  description String?
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  slots       Int
  filledSlots Int       @default(0)
  status      JobStatus @default(OPEN)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  hospital     Hospital       @relation(fields: [hospitalId], references: [userId])
  applications Application[]
  specialties  JobSpecialty[]

  @@map("jobs")
}

enum JobStatus {
  OPEN
  CLOSED
  CANCELLED
  COMPLETED
}

model JobSpecialty {
  jobId       String
  specialtyId String

  job       Job       @relation(fields: [jobId], references: [id])
  specialty Specialty @relation(fields: [specialtyId], references: [id])

  @@id([jobId, specialtyId])
  @@map("job_specialties")
}

model Application {
  id        String            @id @default(uuid())
  jobId     String
  doctorId  String
  status    ApplicationStatus @default(PENDING)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  job    Job    @relation(fields: [jobId], references: [id])
  doctor Doctor @relation(fields: [doctorId], references: [userId])

  @@unique([jobId, doctorId])
  @@map("applications")
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
